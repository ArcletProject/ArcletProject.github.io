import{_ as a,o as i,c as n,aa as p}from"./chunks/framework.DCts17Kx.js";const B=JSON.parse('{"title":"Tarina","description":"","frontmatter":{"prev":"Entari"},"headers":[],"relativePath":"tutorial/tarina.md","filePath":"tutorial/tarina.md","lastUpdated":1751217792000}'),l={name:"tutorial/tarina.md"};function e(t,s,h,k,r,d){return i(),n("div",null,s[0]||(s[0]=[p(`<h1 id="tarina" tabindex="-1">Tarina <a class="header-anchor" href="#tarina" aria-label="Permalink to &quot;Tarina&quot;">​</a></h1><p><a href="https://github.com/ArcletProject/Tarina" target="_blank" rel="noreferrer"><code>Letoderea</code></a> 是 <code>Arclet Project</code> 下的一个组件与开发工具集合, 旨在为其他项目提供一些通用功能，便利开发者的工作。</p><h2 id="i18n" tabindex="-1">i18n <a class="header-anchor" href="#i18n" aria-label="Permalink to &quot;i18n&quot;">​</a></h2><p>Tarina 提供了一个简单的国际化（i18n）解决方案，支持多语言条目管理和模板字符串。其主要代码位于 [<code>tarina.lang</code>]((<a href="https://github.com/ArcletProject/Tarina/tree/main/src/tarina/lang" target="_blank" rel="noreferrer">https://github.com/ArcletProject/Tarina/tree/main/src/tarina/lang</a>)</p><p><code>tarina.lang</code>提供了一个 tarina-lang 命令行工具。 首先可以通过 <code>tarina-lang new</code> 创建文件夹 <code>i18n</code>，</p><p>之后执行 <code>cd ./i18n</code> 和 <code>tarina-lang init</code> 指令，会生成如下文件：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span>📦 project</span></span>
<span class="line"><span>├──📂 i18n</span></span>
<span class="line diff add"><span>│   ├── __init__.py</span></span>
<span class="line diff add"><span>│   ├── .config.json</span></span>
<span class="line diff add"><span>│   ├── .template.json</span></span>
<span class="line diff add"><span>│   └── .template.schema.json</span></span>
<span class="line"><span>├── xxx.py</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><p>你需要将你语言文件中所有包含的项目声明在 <code>.template.json</code> 中，例如：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">.template.json</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  &quot;$schema&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;.template.schema.json&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  &quot;scopes&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">      &quot;scope&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">      &quot;types&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">        &quot;test&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">          &quot;subtype&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;test1&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">          &quot;types&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">            &quot;test2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">          ]</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>然后通过 <code>tarina-lang schema</code> 和 <code>tarina-lang create XXX</code> 指令来创建新的语言文件。以下为使用命令创建 <code>en-US</code> 和 <code>zh-CN</code> 语言文件后的文件结构：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span>📦 project</span></span>
<span class="line"><span>├──📂 i18n</span></span>
<span class="line"><span>│   ├── __init__.py</span></span>
<span class="line"><span>│   ├── .config.json</span></span>
<span class="line diff add"><span>│   ├── .lang.schema.json</span></span>
<span class="line"><span>│   ├── .template.json</span></span>
<span class="line"><span>│   ├── .template.schema.json</span></span>
<span class="line diff add"><span>│   ├── en-US.json</span></span>
<span class="line diff add"><span>│   └── zh-CN.json</span></span>
<span class="line"><span>├── xxx.py</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><p>其中一个语言文件如下所示：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">en-US.json</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  &quot;$schema&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;./.lang.schema.json&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  &quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">    &quot;test&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;Test&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">    &quot;test1&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">      &quot;test2&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &quot;Test2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><code>tarina-lang</code> 支持创建和读取 YAML 格式的语言文件。当然首先你需要额外安装 <code>tarina[yaml]</code></p><p>然后通过 <code>tarina-lang create XXX --yaml</code> 指令创建 <code>.yml</code> 文件</p><p>一个 yaml 格式的语言文件如下所示：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">en-US.yml</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># $schema: .lang.schema.json</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">example</span><span style="--shiki-light:#D32F2F;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  test</span><span style="--shiki-light:#D32F2F;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> Test</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">  test1</span><span style="--shiki-light:#D32F2F;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#E06C75;">    test2</span><span style="--shiki-light:#D32F2F;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> Test2</span></span></code></pre></div></div><p>之后，在 <code>xxx.py</code> 里面，你可以用如下方法来使用i18n条目：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xxx.py</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">i18n </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> lang</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#D19A66;">...</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">text1 </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> lang</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;test&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Test</span></span>
<span class="line"><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果你的条目是模板字符串，你应该直接 text = text.format(...)</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">text2 </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> lang</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">require</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;test1.test2&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Test2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>高级一点，你可以通过 <code>tarina-lang model</code> 指令来生成一个模型文件：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes min-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span>📦 project</span></span>
<span class="line"><span>├──📂 i18n</span></span>
<span class="line"><span>│   ├── __init__.py</span></span>
<span class="line"><span>│   ├── .config.json</span></span>
<span class="line"><span>│   ├── .template.json</span></span>
<span class="line"><span>│   ├── .template.schema.json</span></span>
<span class="line"><span>│   ├── en-US.json</span></span>
<span class="line diff add"><span>│   ├── model.py</span></span>
<span class="line"><span>│   └── zh-CN.json</span></span>
<span class="line"><span>├── xxx.py</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><p>其中 <code>model.py</code>:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">model.py</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> tarina</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">lang</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">model </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> LangItem</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> LangModel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> ExampleTest1</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    test2</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> LangItem </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> LangItem</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;test1.test2&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Example</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    test</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> LangItem </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> LangItem</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;example&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;test&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    test1</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> ExampleTest1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Lang</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">LangModel</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">    example </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Example</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>之后便可以这样使用：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xxx.py</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">i18n </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Lang</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#D19A66;">...</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">text1 </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Lang</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">example</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">test</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Test</span></span>
<span class="line"><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果你的条目是模板字符串，你可以使用 text = Lang.example.test(...)</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">text2 </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Lang</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">example</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">test1</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">test2</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Test2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,22)]))}const F=a(l,[["render",e]]);export{B as __pageData,F as default};
