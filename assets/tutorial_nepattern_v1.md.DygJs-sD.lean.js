import{_ as i,o as a,c as n,aa as t}from"./chunks/framework.DCts17Kx.js";const B=JSON.parse('{"title":"NEPattern","description":"","frontmatter":{"prev":"NEPattern 0.6","next":"Letoderea"},"headers":[],"relativePath":"tutorial/nepattern/v1.md","filePath":"tutorial/nepattern/v1.md","lastUpdated":1751135511000}'),h={name:"tutorial/nepattern/v1.md"};function l(p,s,e,k,r,d){return a(),n("div",null,s[0]||(s[0]=[t(`<h1 id="nepattern" tabindex="-1">NEPattern <a class="header-anchor" href="#nepattern" aria-label="Permalink to &quot;NEPattern&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>在目前的 Arclet 项目中, 仅 <code>Alconna V2</code> 使用了 <code>NEPattern</code> 的 v1 版本, 其他项目仍在使用 v0 版本.</p></div><p><a href="https://github.com/ArcletProject/NEPattern" target="_blank" rel="noreferrer"><code>NEPattern</code></a> 是 <code>Arclet Project</code> 下的负责类型转换、类型验证的模块.</p><p><code>NEPattern</code> 旨在提供一种简单的方式, 使得开发者可以在不了解正则表达式的情况下, 也能够轻松地进行类型转换与类型验证.</p><ul><li>通过传入的 <code>converter</code> 和 <code>validator</code> 等实现了高效的类型转化与类型验证功能</li><li>提供了多种预置的实例, 例如常见的 <code>INT</code> <code>FLOAT</code> <code>BOOL</code> 等</li><li>提供了良好的 <code>typing</code> 支持, 使得开发者可以传入大多数 <code>typing</code> 模块中的类型:</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> parser</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> parser</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(list[</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">([</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">]).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">success</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><code>NEPattern</code> 引入了 <code>Patterns</code> 与 <code>create_local_patterns</code> 等函数, 使得开发者可以自由的控制当前环境下的 <code>Pattern</code> 实例</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> BasePattern</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> _</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(x))</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">13</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">success</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">value</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;"> &#39;42&#39;</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">&lt;&lt;</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;"> 13.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wusRU" id="tab-HRxQqYX" checked><label data-title="pdm" for="tab-HRxQqYX">pdm</label><input type="radio" name="group-wusRU" id="tab-tveqjWv"><label data-title="poetry" for="tab-tveqjWv">poetry</label><input type="radio" name="group-wusRU" id="tab-UvAe7q5"><label data-title="pip" for="tab-UvAe7q5">pip</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> nepattern</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> nepattern</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#2B5581;--shiki-dark:#98C379;"> nepattern</span></span></code></pre></div></div></div><h2 id="构造" tabindex="-1">构造 <a class="header-anchor" href="#构造" aria-label="Permalink to &quot;构造&quot;">​</a></h2><p>一般而言，我们通过 <code>nepattern.Pattern</code> 来构造一个 <code>NEPattern</code> 实例。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> _</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(x))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;42&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">success</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>与 v0 版本不同，v1 版本的 <code>NEPattern</code> 不再显式声明匹配模式，而是通过调用 <code>Pattern</code> 的方法来自定义匹配过程。</p><p>具体而言：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(origin, alias)</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 构造一个 Pattern 实例, origin 为目标类型, alias 为别名</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 设置可接受的类型为 int</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pre_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: x </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 在转换前执行的验证函数 \`输入值大于 0\`</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> _</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(x))</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 设置转换函数为 \`将传入的数字转换为字符串\`</span></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">post_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: x.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">isdigit</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">())</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 在转换后执行的验证函数 \`转换后的字符串仅包含数字\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">success</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="on-方法" tabindex="-1"><code>on</code> 方法 <a class="header-anchor" href="#on-方法" aria-label="Permalink to &quot;\`on\` 方法&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>v0</code> 版本的 <code>BasePattern.of</code> 方法在 <code>v1</code> 版本中应直接使用 <code>Pattern</code> 构造函数: <code>Pattern(int)</code></p></div><p><code>Pattern.on</code> 方法可以快捷创建一个只允许指定对象通过的 pattern:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">123</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">123</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">value</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">124</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">failed</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="regex-match-方法" tabindex="-1"><code>regex_match</code> 方法 <a class="header-anchor" href="#regex-match-方法" aria-label="Permalink to &quot;\`regex_match\` 方法&quot;">​</a></h3><p><code>Pattern.regex_match</code> 方法可以快捷构造一个使用正则表达式匹配的 <code>Pattern</code> 实例。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">regex_match</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#1976D2;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#D32F2F;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;42&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">success</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;abc&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">failed</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>其等同于</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pre_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: re.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">match</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#1976D2;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#D32F2F;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, x))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>该模式下，即使正则表达式内声明了捕获组，Pattern 的返回值也只会是整个字符串。</p><h3 id="regex-convert-方法" tabindex="-1"><code>regex_convert</code> 方法 <a class="header-anchor" href="#regex-convert-方法" aria-label="Permalink to &quot;\`regex_convert\` 方法&quot;">​</a></h3><p><code>Pattern.regex_convert</code> 方法可以快捷构造一个使用正则表达式匹配并进行类型转换的 <code>Pattern</code> 实例。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> nepattern </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">regex_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#1976D2;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#D32F2F;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> mat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(mat[</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;42&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">result</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;"> 42</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#98C379;">&quot;abc&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">failed</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>其等同于</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">accept</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pre_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: re.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">match</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#1976D2;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#D32F2F;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, x)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> _</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(x))</span><span style="--shiki-light:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 实际情况下，匹配和转换都是在 convert 中完成的</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>regex_convert</code> 额外有一个 <code>allow_origin</code> 参数，指定<strong>当输入类型不是字符串，但符合 <code>origin</code> 时，是否直接作为结果返回</strong></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes min-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;">pat </span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> Pattern</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">regex_convert</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#1976D2;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#D32F2F;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">&quot;</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#FF9800;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> mat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#1976D2;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(mat[</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">]), </span><span style="--shiki-light:#212121;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">allow_origin</span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D32F2F;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#24292EFF;--shiki-dark:#ABB2BF;"> pat</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">validate</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">result</span><span style="--shiki-light:#212121;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#D32F2F;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#1976D2;--shiki-dark:#D19A66;"> 42</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,33)]))}const g=i(h,[["render",l]]);export{B as __pageData,g as default};
